<?php

/**
 * Implements hook_menu().
 */
function annotator_menu() {
  $items = array();
  $items['admin/config/content/annotator'] = array(
    'title' => 'Annotator',
    'description' => 'Annotator settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('annotator_admin'),
    'access arguments' => array('administer annotations'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'annotator.pages.inc',
  );
  return $items;
}

/**
 * Implements hook_library().
 */
function annotator_library() {
  $libraries['annotator'] = array(
    'title' => 'Annotator',
    'website' => 'http://okfnlabs.org/annotator/',
    'version' => '1.2.6',
    'js' => array(
      './sites/all/libraries/annotator/annotator-full.min.js' => array(),
    ),
    'css' => array(
      './sites/all/libraries/annotator/annotator.min.css' => array(
        'type' => 'file',
        'media' => 'all',
      ),
    ),
  );
  $libraries['jsgettext'] = array(
    'title' => 'Javascript Gettext',
    'website' => 'http://jsgettext.berlios.de/',
    'version' => '0.08',
    'js' => array(
      './sites/all/libraries/jsgettext/lib/Gettext.js' => array(),
    ),
  );
  $libraries['showdown'] = array(
    'title' => 'Showdown',
    'website' => 'https://github.com/coreyti/showdown',
    'version' => '0.3.1',
    'js' => array(
      './sites/all/libraries/showdown/showdown.js' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function annotator_ctools_plugin_directory($module, $plugin) {
  if ($module == 'annotator') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_ctools_plugin_type().
 */
function annotator_ctools_plugin_type() {
  return array(
    'annotator' => array(
      'cache' => FALSE,
    ),
  );
}

/**
 * Execute ctools plugins
 */
function annotator_execute_plugins($annotation = NULL, $op = NULL) {
  ctools_include('plugins');
  $annotator_plugins = variable_get('annotator_plugins', array());
  foreach ($annotator_plugins as $name => $enabled) {
    if ((boolean) $enabled) {
      $plugin = ctools_get_plugins('annotator', 'annotator', $name . 'AnnotatorPlugin');
      $class = ctools_plugin_get_class($plugin, 'handler');
      if (class_exists($class)) {
        $instance = new $class($plugin);
        $instance->setup();

        if ($annotation && $op) {
          $instance->alter($annotation, $op);
        }
      }
    }
  }
}

/**
 * Implements hook_TYPE_alter().
 */
function annotator_annotation_alter($entity, $op) {
  annotator_execute_plugins($entity, $op);
}

/**
 * Implements hook_node_view().
 */
function annotator_node_view($node, $view_mode, $langcode) {
  // When viewing a node, include the annotator JS if user has permission
  if ($view_mode == 'full') {
    if (user_access('administer annotations') ||
      user_access('view annotations') ||
      user_access('create annotations')) {

      drupal_add_library('annotator', 'annotator', TRUE);
      drupal_add_js(drupal_get_path('module', 'annotator') . '/js/annotator.js');

      annotator_execute_plugins();
    }
  }
}
